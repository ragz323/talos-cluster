# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
    name: authentik
    namespace: authentik
spec:
    interval: 15m
    chart:
      spec:
        chart: authentik
        version: 33.11.0
        sourceRef:
          kind: HelmRepository
          name: truecharts
          namespace: flux-system
    driftDetection:
      mode: warn
    install:
      createNamespace: true
      crds: CreateReplace
      remediation:
        retries: 3
    upgrade:
      cleanupOnFail: true
      crds: CreateReplace
      remediation:
        retries: 3
    uninstall:
      keepHistory: false
    releaseName: authentik
    values:
        global:
          stopAll: false
        TZ: America/Los_Angeles
        credentials:
          s3:
            type: s3
            url: "${S3_URL}"
            bucket: "${S3_BUCKET}"
            accessKey: "${S3_ID}"
            secretKey: "${S3_KEY}"
            encrKey: "${S3_ENCRYPTION_KEY}"
          s3_CNPG:
            type: s3
            url: "${S3_URL}"
            bucket: "${S3_CNPG_BUCKET}"
            accessKey: "${S3_ID}"
            secretKey: "${S3_KEY}"
            encrKey: "${S3_ENCRYPTION_KEY}"
        authentik:
          credentials:
            email: "${EMAIL}"
            password: "${AUTHENTIK_PASSWORD}"
          email:
            host: "${SMTP}"
            password: "${SMTP_PASSWORD}"
            port: 587
            timeout: 10
            useSSL: false
            useTLS: true
            username: "${EMAIL}"
        cnpg:
          main:
            cluster:
                singleNode: true
            postgresql:
              max_slot_wal_keep_size: 10GB
              wal_compression: lz4
            mode: recovery
            backups:
              enabled: true
              credentials: s3_CNPG
              retentionPolicy: "7d"
              scheduledBackups:
              - name: daily-backup
                schedule: "0 5 0 * * *"
                backupOwnerReference: self
                immediate: true
                suspend: false
            recovery:
              method: object_store
              credentials: s3_CNPG
        ingress:
          main:
            enabled: true
            ingressClassName: internal
            annotations:
              nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
            hosts:
              - host: auth.${BASE_DOMAIN}
            integrations:
              certManager:
                certificateIssuer: cloudflare-star-cert
                enabled: true
              homepage:
                enabled: true
                href: https://auth.${BASE_DOMAIN}
                group: "Auth & Security"
                widget:
                  type: authentik
                  custom:
                    url: https://authentik.authentik.svc.cluster.local:10229
                    key: ${HOMEPAGE_AUTHENTIK_KEY}
              traefik:
                enabled: false
        persistence:
          media:
            enabled: true
            path: "${AUTHENTIK_MEDIA_PATH}"
            mountPath: "/media"
            server: "${SCALE_SERVER_IP}"
            type: nfs
          templates:
            volsync:
              - name: templates
                type: restic
                credentials: s3
                dest:
                  enabled: true                          
                src:
                  enabled: true