# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
    name: traefik
    namespace: traefik
spec:
    interval: 15m
    chart:
      spec:
        chart: traefik
        version: 30.4.3
        sourceRef:
          kind: HelmRepository
          name: truecharts
          namespace: flux-system   
    timeout: 20m
    maxHistory: 3
    install:
      createNamespace: true
      crds: CreateReplace
      remediation:
        retries: 3
    upgrade:
      cleanupOnFail: true
      crds: CreateReplace
      remediation:
        retries: 3
    uninstall:
      keepHistory: false                
    releaseName: traefik
    values:
      global:
        stopAll: false
      logs:
        general:
          # By default, the level is set to ERROR. Alternative logging levels are DEBUG, PANIC, FATAL, ERROR, WARN, and INFO.
          level: ERROR
          # -- Set the format of General Logs to be either Common Log Format or JSON. For more information: https://doc.traefik.io/traefik/observability/logs/#format
          format: common
        access:
          enabled: true
      ingress:
        main:
          enabled: true
          hosts:
            - host: traefik.${BASE_DOMAIN}
          integrations:
            certManager:
              certificateIssuer: cloudflare-star-cert
              enabled: true
            homepage:
              enabled: true
              group: "Infrastructure"
              href: http://traefik.${BASE_DOMAIN}
              widget: 
                enabled: true
                type: traefik
                custom:
                  url: http://traefik.traefik.svc.cluster.local:9000
            traefik:
              enabled: true  # Flip to false when rebuilding traefik - this will install chain-basic 
      middlewares:
        forwardAuth:
            - name: auth
              address: http://authentik-http.authentik.svc.cluster.local:10230/outpost.goauthentik.io/auth/traefik
              authResponseHeaders:
                - X-authentik-username
                - X-authentik-groups
                - X-authentik-email
                - X-authentik-name
                - X-authentik-uid
                - X-authentik-jwt
                - X-authentik-meta-jwks
                - X-authentik-meta-outpost
                - X-authentik-meta-provider
                - X-authentik-meta-app
                - X-authentik-meta-version
              trustForwardHeader: true
              tls:
                insecureSkipVerify: true
      service:
        main:
          type: ClusterIP
        tcp:
          type: LoadBalancer
          loadBalancerIP: "${TRAEFIK_IP}"
          externalTrafficPolicy: Local
          ports:
            web:
              enabled: true
              port: 80
              protocol: http
              redirectTo: websecure
            websecure:
              enabled: true
              port: 443
              protocol: https
              # -- Configure (Forwarded Headers)[https://doc.traefik.io/traefik/routing/entrypoints/#forwarded-headers] Support
              forwardedHeaders:
                enabled: false
                # -- List of trusted IP and CIDR references
                trustedIPs: []
                # -- Trust all forwarded headers
                insecureMode: false
              # -- Configure (Proxy Protocol Headers)[https://doc.traefik.io/traefik/routing/entrypoints/#proxyprotocol] Support
              proxyProtocol:
                enabled: false
                # -- Only IPs in trustedIPs will lead to remote client address replacement
                trustedIPs: []
                # -- Trust every incoming connection
                insecureMode: false
              tls:
                enabled: true       